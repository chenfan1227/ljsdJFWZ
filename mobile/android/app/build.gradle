apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services"

/**
 * This is the configuration block to customize your React Native Android app.
 */
react {
    entryFile = "index.js"
    bundleCommand = "bundle"
    bundleConfig = "metro.config.js"
}

/**
 * Set this to true to create four separate APKs instead of one,
 * one for each native architecture. This is useful if you don't
 * use App Bundle.
 */
def enableSeparateBuildPerCPUArchitecture = false

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.jifenbao.mobile"
    defaultConfig {
        applicationId "com.jifenbao.mobile"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        
        // AdMob App ID
        manifestPlaceholders = [
            admobAppId: "ca-app-pub-3940256099942544~3347511713"
        ]
        
        // Vector图标支持
        vectorDrawables.useSupportLibrary = true
        
        // 网络配置
        usesCleartextTraffic true
        
        // 备份设置
        allowBackup false
        
        // 测试设备
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Native构建
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        
        // ProGuard文件
        proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
    }
    
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }
    
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled false
            useProguard false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            useProguard enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            debuggable false
        }
    }

    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal APK
                output.versionCodeOverride =
                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)
            }

        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    packagingOptions {
        pickFirst "**/libc++_shared.so"
        pickFirst "**/libjsc.so"
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/LICENSE"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/license.txt"
        exclude "META-INF/NOTICE"
        exclude "META-INF/NOTICE.txt"
        exclude "META-INF/notice.txt"
        exclude "META-INF/ASL2.0"
        exclude "META-INF/*.kotlin_module"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    
    // React Native
    implementation "com.facebook.react:react-android"
    implementation "com.facebook.react:flipper-integration"
    
    // AndroidX库
    implementation "androidx.core:core:1.9.0"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.activity:activity:1.7.2"
    implementation "androidx.fragment:fragment:1.6.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.recyclerview:recyclerview:1.3.1"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.work:work-runtime:2.8.1"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.room:room-runtime:2.5.0"
    
    // Material Design
    implementation "com.google.android.material:material:1.9.0"
    
    // Google Play Services
    implementation "com.google.android.gms:play-services-base:18.2.0"
    implementation "com.google.android.gms:play-services-auth:20.7.0"
    implementation "com.google.android.gms:play-services-maps:18.1.0"
    implementation "com.google.android.gms:play-services-location:21.0.1"
    implementation "com.google.android.gms:play-services-ads:22.4.0"
    implementation "com.google.android.gms:play-services-ads-identifier:18.0.1"
    implementation "com.google.android.gms:play-services-analytics:18.0.4"
    implementation "com.google.android.gms:play-services-gcm:17.0.0"
    
    // Firebase
    implementation platform("com.google.firebase:firebase-bom:32.3.1")
    implementation "com.google.firebase:firebase-analytics"
    implementation "com.google.firebase:firebase-messaging"
    implementation "com.google.firebase:firebase-crashlytics"
    implementation "com.google.firebase:firebase-perf"
    implementation "com.google.firebase:firebase-database"
    implementation "com.google.firebase:firebase-auth"
    implementation "com.google.firebase:firebase-storage"
    
    // 网络库
    implementation "com.squareup.okhttp3:okhttp:4.11.0"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    
    // 图片库
    implementation "com.github.bumptech.glide:glide:4.15.1"
    implementation "com.squareup.picasso:picasso:2.8"
    
    // 权限库
    implementation "com.karumi:dexter:6.2.3"
    implementation "pub.devrel:easypermissions:3.0.0"
    
    // 数据库
    implementation "com.orhanobut:logger:2.2.0"
    implementation "com.jakewharton:butterknife:10.2.3"
    
    // 加密库
    implementation "com.scottyab:aes-crypto:0.0.5"
    implementation "androidx.security:security-crypto:1.1.0-alpha06"
    
    // 二维码
    implementation "com.journeyapps:zxing-android-embedded:4.3.0"
    implementation "com.google.zxing:core:3.5.2"
    
    // 视频播放
    implementation "com.google.android.exoplayer:exoplayer:2.19.1"
    
    // JSON解析
    implementation "com.google.code.gson:gson:2.10.1"
    implementation "com.alibaba:fastjson:2.0.40"
    
    // 事件总线
    implementation "org.greenrobot:eventbus:3.3.1"
    
    // 下拉刷新
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    
    // 动画库
    implementation "com.airbnb.android:lottie:6.1.0"
    
    // 多语言
    implementation "androidx.appcompat:appcompat:1.6.1"
    
    // 调试工具
    debugImplementation "com.facebook.flipper:flipper:0.201.0"
    debugImplementation "com.facebook.flipper:flipper-network-plugin:0.201.0"
    debugImplementation "com.facebook.flipper:flipper-fresco-plugin:0.201.0"
    releaseImplementation "com.facebook.flipper:flipper-noop:0.201.0"
    
    // 测试库
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

// Run this once to be able to run the application with BUCK
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.implementation
    into 'libs'
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)

// 添加这个用于处理React Native新架构
apply from: "../../node_modules/react-native/react.gradle"
